{"version":3,"file":"static/js/113.b3629abb.chunk.js","mappings":"oQAGaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAEpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAE5CC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IAEjB,SAACN,EAAUO,GACT,OAAOP,EAASO,QACd,SAAAG,GAAO,OACLA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,gBAC3CF,EAAQI,OAAOF,cAAcC,SAASN,EAAOK,cAAc,GAEjE,I,mGCJa,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,IAAYpB,GAC7BqB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BR,EAAIU,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCV,EAAMW,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA8BP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aAIlBC,GAAYC,EAAAA,EAAAA,UAAQ,WACxB,MAAe,KAAXvB,IAEiBA,EALcwB,MAAM,iBAM3C,GAAG,CAACxB,IAqCJ,OACEyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAASV,EACTW,UAAU,gCACVC,YAAYJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACF,UAAU,YAAaJ,SAC1C,iBAIDC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACf,OAAQA,EAAQE,aAAcA,EAAcc,UAAU,aAAYR,UACvEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,UACXF,EAAAA,EAAAA,MAAA,QAAMY,SA/CO,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAkBtD,EAASuD,MAC/B,SAAA7C,GAAO,OAAIA,EAAQC,OAASA,GAAQD,EAAQI,SAAWA,CAAM,IAG1DwC,GAAoBlB,EAOrBkB,GACAA,EAAgB3C,OAASA,GACzB2C,EAAgBxC,SAAWA,EAE3BgB,EAAW,qBAAD0B,OACa7C,EAAI,eAAA6C,OAAc1C,EAAM,qBAEtCwC,GAAmBA,EAAgB3C,OAASA,EACrDmB,EAAW,qBAAD0B,OAAsB7C,EAAI,qBAC3B2C,GAAmBA,EAAgBxC,SAAWA,GACvDgB,EAAW,sBAAD0B,OAAuB1C,EAAM,sBAhBzCE,GAASyC,EAAAA,EAAAA,IAAW,CAAE9C,KAAAA,EAAMG,OAAAA,KAC5BS,EAAQ,IACRG,EAAU,IACVS,GAAa,GAgBjB,EAqBsCU,UAAU,sBAAqBJ,SAAA,EAC3DC,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CAACb,UAAU,sBAAqBJ,SAAC,iBAG7CF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACRC,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,OACLC,MAAM,OACNC,MAAOpD,EACPqD,SAAU,SAAAC,GAAC,OAAI1C,EAAQ0C,EAAEC,OAAOH,MAAM,EACtCI,QAAQ,WACRC,YAAU,EACVC,KAAK,QAEP3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,MACLC,MAAM,QACNC,MAAOjD,EACPkD,SAAU,SAAAC,GAAC,OAAIvC,EAAUuC,EAAEC,OAAOH,MAAM,EACxCI,QAAQ,WACRC,YAAU,EACVhC,UAAWA,EACXkC,aAAclC,GAAa,oCAC3BmC,MAAOnC,GAAa,SACpBiC,KAAK,OAENxC,IAAWa,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBJ,SAAEZ,QAEpDU,EAAAA,EAAAA,MAACiC,EAAAA,EAAW,CAAA/B,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC4B,MAAM,SAASJ,QAAQ,OAAOM,QAhD/B,WACjBtC,GAAa,GACbZ,EAAQ,IACRG,EAAU,IACVI,EAAW,GACb,EA2CsEW,SAAC,WAG3DC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACkB,KAAK,SAASU,MAAM,UAAS9B,SAAC,4BASpD,C,wBC5FA,EAtBe,WACb,IAAMlC,GAASW,EAAAA,EAAAA,IAAYZ,GACrBU,GAAWC,EAAAA,EAAAA,MAMjB,OACEyB,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,OACLa,YAAY,kBACZX,MAAOxD,EACPyD,SATiB,SAAAZ,GACnBpC,GAAS2D,EAAAA,EAAAA,GAAUvB,EAAMc,OAAOH,OAClC,EAQIa,eAAe,UACfC,cACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAACjC,UAAU,iEAI1B,E,uFCwIA,EArIoB,WAClB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXhB,GAAQiB,EAAAA,EAAAA,IAAYV,GACpBL,GAAYe,EAAAA,EAAAA,IAAYhB,GACxBG,GAAQa,EAAAA,EAAAA,IAAYd,GAC1B2B,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aACxBhB,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArD4D,EAAe1D,EAAA,GAAE2D,EAAkB3D,EAAA,IAE1C4D,EAAAA,EAAAA,YAAU,WACRjE,GAASkE,EAAAA,EAAAA,MACX,GAAG,CAAClE,IAEJ,IAAMmE,EAAiBlF,EACpBmF,QACAC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE3E,KAAK6E,cAAcD,EAAE5E,KAAK,IAS9C,OACE4B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACkD,EAAAA,EAAK,CACJ,aAAW,WACXC,cAAc,SACdC,oBAAqB,CAAC,KACtBC,gBAAc,EACdC,WAAY,CACVC,KAAM,iCACNrD,SAAA,EAEFF,EAAAA,EAAAA,MAACwD,EAAAA,EAAW,CAAAtD,SAAA,EACVC,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,CAACnD,UAAU,QAAOJ,SAAC,UAC/BC,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,CAACnD,UAAU,QAAOJ,SAAC,WAC/BC,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,CAACnD,UAAU,oBAAmBJ,SAAC,gBAE7CF,EAAAA,EAAAA,MAAC0D,EAAAA,EAAS,CAACC,aAAc,0BAA0BzD,SAAA,CAChDtC,IAAcE,IACbkC,EAAAA,EAAAA,MAAC4D,EAAAA,EAAQ,CAAA1D,SAAA,EACPC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAAC,eAAc,EAAGC,QAAS,EAAGxD,UAAU,cAAaJ,UAC7DC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAO,OAEV5D,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAACvD,UAAU,YACrBH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAACvD,UAAU,cAGxBxC,IACCkC,EAAAA,EAAAA,MAAC4D,EAAAA,EAAQ,CAAA1D,SAAA,EACPC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CACR,eAAc,EACdC,QAAS,EACTxD,UAAU,0BAAyBJ,SAElCpC,KAEHqC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAACvD,UAAU,YACrBH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAACvD,UAAU,eAIvB1C,GACAgF,EAAeoB,KAAI,SAAA7F,GAAO,OACxB6B,EAAAA,EAAAA,MAAC4D,EAAAA,EAAQ,CAAA1D,SAAA,EACPC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAAA3D,SAAE/B,EAAQC,QACpB+B,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,CAAA3D,SAAE/B,EAAQI,UACpByB,EAAAA,EAAAA,MAAC6D,EAAAA,EAAS,CAACvD,UAAU,0BAAyBJ,SAAA,EAC5CC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL4B,MAAM,UACNJ,QAAQ,QACRE,KAAK,KACLI,QAAS,kBAvDR,SAAA/D,GACjBsE,EAAmBtE,GACnBwB,GACF,CAoDiCsE,CAAW9F,EAAQ,EAClC+F,YAAU,EACV5B,cAAcnC,EAAAA,EAAAA,KAACgE,EAAAA,EAAU,CAAC7D,UAAU,eAEtCH,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL4B,MAAM,SACNJ,QAAQ,QACRE,KAAK,KACLI,QAAS,kBAjENkC,EAiEyBjG,EAAQiG,GAjE3B3F,GAAS4F,EAAAA,EAAAA,IAAcD,IAA7B,IAAAA,CAiEoC,EACvCF,YAAU,EACV5B,cAAcnC,EAAAA,EAAAA,KAACmE,EAAAA,EAAU,CAAChE,UAAU,mBAlB3BnC,EAAQiG,GAqBZ,WAKnBjE,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACf,OAAQA,EAAQE,aAAcA,EAAcc,UAAU,aAAYR,UACvEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAAAT,SACV,SAAAqE,GAAO,OACNvE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CAACb,UAAU,sBAAqBJ,SAAC,kBAG7CF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACRC,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,OACLkD,WAAS,EACTjD,MAAM,OACNC,MAAOgB,EAAkBA,EAAgBpE,KAAO,GAChDwD,QAAQ,WACRC,YAAU,EACVC,KAAK,QAEP3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,KAAK,MACLC,MAAM,QACNC,MAAOgB,EAAkBA,EAAgBjE,OAAS,GAClDqD,QAAQ,WACRC,YAAU,EACVC,KAAK,WAGT9B,EAAAA,EAAAA,MAACiC,EAAAA,EAAW,CAAA/B,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC4B,MAAM,SAASJ,QAAQ,OAAOvB,QAASkE,EAAQrE,SAAC,WAGxDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC4B,MAAM,UAAU3B,QAASkE,EAAQrE,SAAC,cAI3C,QAMf,E,SCzGA,EA9CiB,WACf,IAAQuE,GAASC,EAAAA,EAAAA,KAATD,KAEF/G,GAAQiB,EAAAA,EAAAA,IAAYV,GAE1B,OACEkC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wFAAuFJ,UACpGF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sBAAqBJ,SAAA,EAClCC,EAAAA,EAAAA,KAACwE,EAAAA,GAAM,CAAAzE,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,4BAETF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sEAAqEJ,SAAA,EAClFF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kCAAiCJ,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,MAAIM,UAAU,6DAA4DJ,SAAA,CAAC,YAC/DuE,EAAKrG,SAEjB+B,EAAAA,EAAAA,KAACyE,EAAAA,EAAI,CACHxG,KAAMqG,EAAKrG,KACXyG,YAAaJ,EAAKK,MAClBC,cAAY,EACZC,YAAa,CACXlD,KAAM,SAGV3B,EAAAA,EAAAA,KAAA,OAAAD,SACoB,IAAjBxC,EAAMuH,QACL9E,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCAEHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,YACSxC,EAAMuH,OAAQ,IACN,IAAjBvH,EAAMuH,OAAe,UAAY,WAAW,UAInD9E,EAAAA,EAAAA,KAAC+E,EAAW,QAEdlF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sBAAqBJ,SAAA,EAClCC,EAAAA,EAAAA,KAACgF,EAAM,KACPhF,EAAAA,EAAAA,KAACiF,EAAW,cAMxB,C","sources":["redux/contacts/selectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// Import createSelector function from '@reduxjs/toolkit' for creating memoized selectors\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../redux/contacts/operations';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  useDisclosure,\n  Input,\n} from '@nextui-org/react';\nimport { Plus } from 'lucide-react';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [message, setMessage] = useState('');\n  const { isOpen, onOpen, onOpenChange } = useDisclosure();\n\n  const validatePhone = phone => phone.match(/^[0-9+\\-() ]*$/);\n\n  const isInvalid = useMemo(() => {\n    if (number === '') return false;\n\n    return validatePhone(number) ? false : true;\n  }, [number]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingContact = contacts.find(\n      contact => contact.name === name || contact.number === number\n    );\n\n    if (!existingContact && !isInvalid) {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n      onOpenChange(false);\n    } else {\n      if (\n        existingContact &&\n        existingContact.name === name &&\n        existingContact.number === number\n      ) {\n        setMessage(\n          `Contact with name ${name} and phone ${number} already exists!`\n        );\n      } else if (existingContact && existingContact.name === name) {\n        setMessage(`Contact with name ${name} already exists!`);\n      } else if (existingContact && existingContact.number === number) {\n        setMessage(`Contact with phone ${number} already exists!`);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    onOpenChange(false);\n    setName('');\n    setNumber('');\n    setMessage('');\n  };\n\n  return (\n    <>\n      <Button\n        onPress={onOpen}\n        className=\"bg-blue-600 text-white w-full\"\n        endContent={<Plus className=\"w-5 h-5\" />}\n      >\n        Add Contact\n      </Button>\n\n      <Modal isOpen={isOpen} onOpenChange={onOpenChange} placement=\"top-center\">\n        <ModalContent>\n          <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n            <ModalHeader className=\"flex flex-col gap-1\">\n              Add Contact\n            </ModalHeader>\n            <ModalBody>\n              <Input\n                type=\"text\"\n                label=\"Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n                variant=\"bordered\"\n                isRequired\n                size=\"sm\"\n              />\n              <Input\n                type=\"tel\"\n                label=\"Phone\"\n                value={number}\n                onChange={e => setNumber(e.target.value)}\n                variant=\"bordered\"\n                isRequired\n                isInvalid={isInvalid}\n                errorMessage={isInvalid && 'Please enter a valid phone number'}\n                color={isInvalid && 'danger'}\n                size=\"sm\"\n              />\n              {message && <div className=\"text-sm text-danger\">{message}</div>}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" variant=\"flat\" onClick={closeModal}>\n                Close\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Add Contact\n              </Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../redux/contacts/filterSlice';\nimport { selectFilter } from '../redux/contacts/selectors';\nimport { Input } from '@nextui-org/react';\nimport { Search } from 'lucide-react';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={filter}\n      onChange={handleChange}\n      labelPlacement=\"outside\"\n      startContent={\n        <Search className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n      }\n    />\n  );\n};\n\nexport default Filter;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../redux/contacts/operations';\nimport {\n  selectVisibleContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/selectors';\nimport {\n  Table,\n  TableHeader,\n  TableColumn,\n  TableBody,\n  TableRow,\n  TableCell,\n  Spinner,\n} from '@nextui-org/react';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  useDisclosure,\n  Input,\n} from '@nextui-org/react';\nimport { Trash2Icon, PencilIcon } from 'lucide-react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const { isOpen, onOpen, onOpenChange } = useDisclosure();\n  const [selectedContact, setSelectedContact] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const sortedContacts = items\n    .slice()\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  const handleEdit = contact => {\n    setSelectedContact(contact);\n    onOpen();\n  };\n\n  return (\n    <>\n      <Table\n        aria-label=\"Contacts\"\n        selectionMode=\"single\"\n        defaultSelectedKeys={['2']}\n        isHeaderSticky\n        classNames={{\n          base: 'max-h-[480px] overflow-scroll',\n        }}\n      >\n        <TableHeader>\n          <TableColumn className=\"w-2/5\">NAME</TableColumn>\n          <TableColumn className=\"w-2/5\">PHONE</TableColumn>\n          <TableColumn className=\"w-1/5 text-center\">ACTIONS</TableColumn>\n        </TableHeader>\n        <TableBody emptyContent={'No contacts to display.'}>\n          {isLoading && !error && (\n            <TableRow>\n              <TableCell aria-colspan={3} colSpan={3} className=\"text-center\">\n                <Spinner />\n              </TableCell>\n              <TableCell className=\"hidden\"></TableCell>\n              <TableCell className=\"hidden\"></TableCell>\n            </TableRow>\n          )}\n          {error && (\n            <TableRow>\n              <TableCell\n                aria-colspan={3}\n                colSpan={3}\n                className=\"text-center text-danger\"\n              >\n                {error}\n              </TableCell>\n              <TableCell className=\"hidden\"></TableCell>\n              <TableCell className=\"hidden\"></TableCell>\n            </TableRow>\n          )}\n\n          {!isLoading &&\n            sortedContacts.map(contact => (\n              <TableRow key={contact.id}>\n                <TableCell>{contact.name}</TableCell>\n                <TableCell>{contact.number}</TableCell>\n                <TableCell className=\"flex gap-1 items-center\">\n                  <Button\n                    color=\"default\"\n                    variant=\"light\"\n                    size=\"sm\"\n                    onClick={() => handleEdit(contact)}\n                    isIconOnly\n                    startContent={<PencilIcon className=\"w-4 h-4\" />}\n                  />\n                  <Button\n                    color=\"danger\"\n                    variant=\"light\"\n                    size=\"sm\"\n                    onClick={() => handleDelete(contact.id)}\n                    isIconOnly\n                    startContent={<Trash2Icon className=\"w-4 h-4\" />}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n\n      <Modal isOpen={isOpen} onOpenChange={onOpenChange} placement=\"top-center\">\n        <ModalContent>\n          {onClose => (\n            <>\n              <ModalHeader className=\"flex flex-col gap-1\">\n                Edit contact\n              </ModalHeader>\n              <ModalBody>\n                <Input\n                  type=\"text\"\n                  autoFocus\n                  label=\"Name\"\n                  value={selectedContact ? selectedContact.name : ''}\n                  variant=\"bordered\"\n                  isRequired\n                  size=\"sm\"\n                />\n                <Input\n                  type=\"tel\"\n                  label=\"Phone\"\n                  value={selectedContact ? selectedContact.number : ''}\n                  variant=\"bordered\"\n                  isRequired\n                  size=\"sm\"\n                />\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"danger\" variant=\"flat\" onPress={onClose}>\n                  Close\n                </Button>\n                <Button color=\"primary\" onPress={onClose}>\n                  Save\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet-async';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { User } from '@nextui-org/react';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../redux/contacts/selectors';\n\nconst Contacts = () => {\n  const { user } = useAuth();\n\n  const items = useSelector(selectVisibleContacts);\n\n  return (\n    <div className=\"container mx-auto flex flex-col gap-4 py-4 md:py-8 md:pt-4 mb-24 sm:mb-0 px-6 md:px-0\">\n      <div className=\"flex flex-col gap-4\">\n        <Helmet>\n          <title>Phonebook - Contacts</title>\n        </Helmet>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:w-[1024px] mx-auto lg:px-6\">\n          <div className=\"flex flex-col gap-4 items-start\">\n            <h2 className=\"text-xl font-bold leading-tight tracking-tight md:text-3xl\">\n              Welcome, {user.name}\n            </h2>\n            <User\n              name={user.name}\n              description={user.email}\n              showFallback\n              avatarProps={{\n                size: 'lg',\n              }}\n            />\n            <div>\n              {items.length === 0 ? (\n                <p>You don't have any contacts yet.</p>\n              ) : (\n                <p>\n                  You have {items.length}{' '}\n                  {items.length === 1 ? 'contact' : 'contacts'}.\n                </p>\n              )}\n            </div>\n            <ContactForm />\n          </div>\n          <div className=\"flex flex-col gap-4\">\n            <Filter />\n            <ContactList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","number","Form","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","_useState5","_useState6","message","setMessage","_useDisclosure","useDisclosure","isOpen","onOpen","onOpenChange","isInvalid","useMemo","match","_jsxs","_Fragment","children","_jsx","Button","onPress","className","endContent","Plus","Modal","placement","ModalContent","onSubmit","event","preventDefault","existingContact","find","concat","addContact","ModalHeader","ModalBody","Input","type","label","value","onChange","e","target","variant","isRequired","size","errorMessage","color","ModalFooter","onClick","placeholder","setFilter","labelPlacement","startContent","Search","selectedContact","setSelectedContact","useEffect","fetchContacts","sortedContacts","slice","sort","a","b","localeCompare","Table","selectionMode","defaultSelectedKeys","isHeaderSticky","classNames","base","TableHeader","TableColumn","TableBody","emptyContent","TableRow","TableCell","colSpan","Spinner","map","handleEdit","isIconOnly","PencilIcon","id","deleteContact","Trash2Icon","onClose","autoFocus","user","useAuth","Helmet","User","description","email","showFallback","avatarProps","length","ContactForm","Filter","ContactList"],"sourceRoot":""}