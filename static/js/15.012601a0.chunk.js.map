{"version":3,"file":"static/js/15.012601a0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","components/Info.jsx","pages/Contacts.jsx"],"sourcesContent":["// Import createSelector function from '@reduxjs/toolkit' for creating memoized selectors\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, updateContact } from '../redux/contacts/operations';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input,\n} from '@nextui-org/react';\n\nconst Form = ({ isOpen, onOpenChange, editingContact }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (editingContact) {\n      setName(editingContact.name);\n      setNumber(editingContact.number);\n    } else {\n      setName('');\n      setNumber('');\n      setMessage('');\n    }\n  }, [editingContact]);\n\n  const validatePhone = phone => phone.match(/^[0-9+\\-() ]*$/);\n\n  const isInvalid = useMemo(() => {\n    if (number === '') return false;\n\n    return validatePhone(number) ? false : true;\n  }, [number]);\n\n  const handleSubmit = event => {\n    const filteredContacts = contacts.filter(\n      contact => !editingContact || contact.id !== editingContact.id\n    );\n\n    const existingContact = filteredContacts.find(\n      contact => contact.name === name || contact.number === number\n    );\n\n    if (!existingContact && !isInvalid) {\n      if (editingContact) {\n        dispatch(\n          updateContact({\n            contactId: editingContact.id,\n            updatedData: {\n              name,\n              number,\n            },\n          })\n        );\n      } else {\n        dispatch(addContact({ name, number }));\n      }\n      setName('');\n      setNumber('');\n      setMessage('');\n      onOpenChange(false);\n    } else {\n      if (\n        existingContact &&\n        existingContact.name === name &&\n        existingContact.number === number\n      ) {\n        setMessage(\n          `Contact with name ${name} and phone ${number} already exists!`\n        );\n      } else if (existingContact && existingContact.name === name) {\n        setMessage(`Contact with name ${name} already exists!`);\n      } else if (existingContact && existingContact.number === number) {\n        setMessage(`Contact with phone ${number} already exists!`);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    onOpenChange(false);\n\n    if (editingContact) {\n      setName(editingContact.name);\n      setNumber(editingContact.number);\n    } else {\n      setName('');\n      setNumber('');\n    }\n    setMessage('');\n  };\n\n  return (\n    <Modal isOpen={isOpen} onOpenChange={onOpenChange} placement=\"top-center\">\n      <ModalContent>\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n          <ModalHeader className=\"flex flex-col gap-1\">\n            {editingContact !== null ? 'Edit Contact' : 'Add Contact'}\n          </ModalHeader>\n          <ModalBody>\n            <Input\n              type=\"text\"\n              label=\"Name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              variant=\"bordered\"\n              isRequired\n              size=\"sm\"\n            />\n            <Input\n              type=\"tel\"\n              label=\"Phone\"\n              value={number}\n              onChange={e => setNumber(e.target.value)}\n              variant=\"bordered\"\n              isRequired\n              isInvalid={isInvalid}\n              errorMessage={isInvalid && 'Please enter a valid phone number'}\n              color={isInvalid && 'danger'}\n              size=\"sm\"\n            />\n            {message && <div className=\"text-sm text-danger\">{message}</div>}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" variant=\"flat\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              {editingContact !== null ? 'Save' : 'Add Contact'}\n            </Button>\n          </ModalFooter>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Form;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../redux/contacts/filterSlice';\nimport { selectFilter } from '../redux/contacts/selectors';\nimport { Input } from '@nextui-org/react';\nimport { Search } from 'lucide-react';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={filter}\n      onChange={handleChange}\n      labelPlacement=\"outside\"\n      startContent={\n        <Search className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n      }\n    />\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../redux/contacts/operations';\nimport {\n  selectVisibleContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/selectors';\nimport {\n  Table,\n  TableHeader,\n  TableColumn,\n  TableBody,\n  TableRow,\n  TableCell,\n  Spinner,\n  Button,\n} from '@nextui-org/react';\nimport { Trash2Icon, PencilIcon } from 'lucide-react';\n\nconst ContactList = ({ onOpen, onEditContact, editingContact }) => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const sortedContacts = items\n    .slice()\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <Table\n      aria-label=\"Contacts\"\n      selectionMode=\"single\"\n      defaultSelectedKeys={['2']}\n      isHeaderSticky\n      classNames={{\n        base: 'max-h-[480px] overflow-scroll',\n      }}\n    >\n      <TableHeader>\n        <TableColumn className=\"w-2/5\">NAME</TableColumn>\n        <TableColumn className=\"w-2/5\">PHONE</TableColumn>\n        <TableColumn className=\"w-1/5 text-center\">ACTIONS</TableColumn>\n      </TableHeader>\n      <TableBody emptyContent={'No contacts to display.'}>\n        {isLoading && !error && (\n          <TableRow>\n            <TableCell aria-colspan={3} colSpan={3} className=\"text-center\">\n              <Spinner />\n            </TableCell>\n            <TableCell className=\"hidden\"></TableCell>\n            <TableCell className=\"hidden\"></TableCell>\n          </TableRow>\n        )}\n        {error && (\n          <TableRow>\n            <TableCell\n              aria-colspan={3}\n              colSpan={3}\n              className=\"text-center text-danger\"\n            >\n              {error}\n            </TableCell>\n            <TableCell className=\"hidden\"></TableCell>\n            <TableCell className=\"hidden\"></TableCell>\n          </TableRow>\n        )}\n\n        {!isLoading &&\n          sortedContacts.map(contact => (\n            <TableRow key={contact.id}>\n              <TableCell>{contact.name}</TableCell>\n              <TableCell>{contact.number}</TableCell>\n              <TableCell className=\"flex gap-1 items-center\">\n                <Button\n                  color=\"default\"\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={() => onEditContact(contact)}\n                  onOpen={onOpen}\n                  isIconOnly\n                  startContent={<PencilIcon className=\"w-4 h-4\" />}\n                />\n                <Button\n                  color=\"danger\"\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={() => handleDelete(contact.id)}\n                  isIconOnly\n                  startContent={<Trash2Icon className=\"w-4 h-4\" />}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default ContactList;\n","import { useAuth } from 'hooks';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../redux/contacts/selectors';\nimport { User } from '@nextui-org/react';\n\nconst Info = () => {\n  const { user } = useAuth();\n\n  const items = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      <h2 className=\"text-xl font-bold leading-tight tracking-tight md:text-3xl\">\n        Welcome, {user.name}\n      </h2>\n      <User\n        name={user.name}\n        description={user.email}\n        showFallback\n        avatarProps={{\n          size: 'lg',\n        }}\n      />\n      <div>\n        {items.length === 0 ? (\n          <p>You don't have any contacts yet.</p>\n        ) : (\n          <p>\n            You have {items.length}{' '}\n            {items.length === 1 ? 'contact' : 'contacts'}.\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Info;\n","import { Helmet } from 'react-helmet-async';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { useState } from 'react';\nimport { Button, useDisclosure } from '@nextui-org/react';\nimport Info from 'components/Info';\nimport { Plus } from 'lucide-react';\n\nconst Contacts = () => {\n  const [editingContact, setEditingContact] = useState(null);\n  const { isOpen, onOpen, onOpenChange } = useDisclosure();\n\n  const handleAddContact = () => {\n    setEditingContact(null);\n    onOpenChange(true);\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n    onOpenChange(true);\n  };\n\n  return (\n    <div className=\"container mx-auto flex flex-col gap-4 py-4 md:py-8 md:pt-4 mb-24 sm:mb-0 px-6 md:px-0\">\n      <div className=\"flex flex-col gap-4\">\n        <Helmet>\n          <title>Phonebook - Contacts</title>\n        </Helmet>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:w-[1024px] mx-auto lg:px-6\">\n          <div className=\"flex flex-col gap-4 items-start\">\n            <Info />\n\n            <Button\n              onClick={handleAddContact}\n              onOpen={onOpen}\n              endContent={<Plus className=\"w-5 h-5\" />}\n              className=\"bg-blue-600 text-white w-full\"\n            >\n              Add Contact\n            </Button>\n            <ContactForm\n              isOpen={isOpen}\n              onOpenChange={onOpenChange}\n              editingContact={editingContact}\n            />\n          </div>\n          <div className=\"flex flex-col gap-4\">\n            <Filter />\n            <ContactList\n              isOpen={isOpen}\n              onOpenChange={onOpenChange}\n              onEditContact={handleEditContact}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","number","_ref","isOpen","onOpenChange","editingContact","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","_useState5","_useState6","message","setMessage","useEffect","isInvalid","useMemo","match","_jsx","Modal","placement","children","ModalContent","_jsxs","onSubmit","event","existingContact","id","find","concat","updateContact","contactId","updatedData","addContact","className","ModalHeader","ModalBody","Input","type","label","value","onChange","e","target","variant","isRequired","size","errorMessage","color","ModalFooter","Button","onClick","placeholder","setFilter","labelPlacement","startContent","Search","onOpen","onEditContact","fetchContacts","sortedContacts","slice","sort","a","b","localeCompare","Table","selectionMode","defaultSelectedKeys","isHeaderSticky","classNames","base","TableHeader","TableColumn","TableBody","emptyContent","TableRow","TableCell","colSpan","Spinner","map","isIconOnly","PencilIcon","deleteContact","Trash2Icon","user","useAuth","_Fragment","User","description","email","showFallback","avatarProps","length","setEditingContact","_useDisclosure","useDisclosure","Helmet","Info","endContent","Plus","ContactForm","Filter","ContactList"],"sourceRoot":""}